[{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #eee;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n}\n\nfunction spawnBlock() {\n    let emptySpaces = [];\n    for (let r = 0; r < 4; r++) {\n        for (let c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r, c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        let { r, c } = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[r][c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    const gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (let r = 0; r < 4; r++) {\n        for (let c = 0; c < 4; c++) {\n            let tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction move(direction) {\n    // Implement move logic here (left, right, up, down)\n    // Update score and call spawnBlock() if any tile moved\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp') move('up');\n    else if (event.key === 'ArrowDown') move('down');\n    else if (event.key === 'ArrowLeft') move('left');\n    else if (event.key === 'ArrowRight') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\ninitGame();","multiplayer":"function sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #eee;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n}\n\nfunction spawnBlock() {\n    let emptySpaces = [];\n    for (let r = 0; r < 4; r++) {\n        for (let c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r, c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        let { r, c } = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[r][c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    const gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (let r = 0; r < 4; r++) {\n        for (let c = 0; c < 4; c++) {\n            let tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction move(direction) {\n    let moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (let c = 0; c < 4; c++) {\n            let line = [];\n            for (let r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            let mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (let r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (let r = 0; r < 4; r++) {\n            let line = [];\n            for (let c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            let mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (let c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    let merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            let mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp') move('up');\n    else if (event.key === 'ArrowDown') move('down');\n    else if (event.key === 'ArrowLeft') move('left');\n    else if (event.key === 'ArrowRight') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\ninitGame();","multiplayer":"function sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #eee;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n}\n\nfunction spawnBlock() {\n    let emptySpaces = [];\n    for (let r = 0; r < 4; r++) {\n        for (let c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r, c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        let { r, c } = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[r][c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    const gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (let r = 0; r < 4; r++) {\n        for (let c = 0; c < 4; c++) {\n            let tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction move(direction) {\n    let moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (let c = 0; c < 4; c++) {\n            let line = [];\n            for (let r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            let mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (let r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (let r = 0; r < 4; r++) {\n            let line = [];\n            for (let c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            let mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (let c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    let merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            let mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\ninitGame();","multiplayer":"function sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #eee;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee';\n    if (value === 4) return '#ffffe0';\n    if (value === 8) return '#ffff00';\n    if (value === 16) return '#ffcc00';\n    if (value === 32) return '#ffa500';\n    if (value === 64) return '#ff4500';\n    if (value >= 128) return '#ff0000';\n    return '#eee';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\ninitGame();","multiplayer":"function sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\ninitGame();","multiplayer":"function sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\ninitGame();","multiplayer":"function sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\ninitGame();","multiplayer":"function sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\ninitGame();","multiplayer":"function sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({}),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\ninitGame();","multiplayer":"function sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({}),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\nsendGameState();"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            response.leaderboard.forEach(function(entry) {\n                var listItem = document.createElement('li');\n                listItem.textContent = entry.email + ': ' + entry.score;\n                leaderboardList.appendChild(listItem);\n            });\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\nfunction sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\ninitGame();","multiplayer":"function receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            if (response.leaderboard && response.leaderboard.length > 0) {\n                response.leaderboard.forEach(function(entry) {\n                    var listItem = document.createElement('li');\n                    listItem.textContent = entry.email + ': ' + entry.score;\n                    leaderboardList.appendChild(listItem);\n                });\n            } else {\n                var listItem = document.createElement('li');\n                listItem.textContent = \"No leaderboard data available.\";\n                leaderboardList.appendChild(listItem);\n            }\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\nfunction sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\ninitGame();","multiplayer":"function receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}"},{"title":"2048","html":"<div id=\"game-container\">\n    <div id=\"game-board\"></div>\n    <div id=\"score\">Score: 0</div>\n    <button id=\"restart-btn\">Restart</button>\n    <div id=\"leaderboard\">\n        <h3>Leaderboard</h3>\n        <ul id=\"leaderboard-list\"></ul>\n    </div>\n</div>\n<script type=\"module\">\n    import $ from 'jquery';\n</script>","css":"#game-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px;\n}\n\n#game-board {\n    display: grid;\n    grid-template-columns: repeat(4, 80px);\n    grid-template-rows: repeat(4, 80px);\n    gap: 5px;\n}\n\n#game-board div {\n    width: 80px;\n    height: 80px;\n    background-color: #cdc1b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n}\n\n#score {\n    margin: 10px;\n    font-size: 20px;\n    color: #333;\n}\n\n#restart-btn {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n}\n\n#restart-btn:hover {\n    background-color: #555;\n}\n\n#leaderboard {\n    margin-top: 20px;\n    width: 100%;\n    max-width: 300px;\n}\n\n#leaderboard h3 {\n    font-size: 18px;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n#leaderboard-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n#leaderboard-list li {\n    background-color: #f0f0f0;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    color: #333;\n}","javascript":"var board;\nvar score = 0;\n\nfunction initGame() {\n    board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    score = 0;\n    document.getElementById('score').textContent = 'Score: ' + score;\n    spawnBlock();\n    spawnBlock();\n    updateBoard();\n    updateLeaderboard();\n}\n\nfunction spawnBlock() {\n    var emptySpaces = [];\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) {\n                emptySpaces.push({ r: r, c: c });\n            }\n        }\n    }\n    if (emptySpaces.length > 0) {\n        var randomSpace = emptySpaces[Math.floor(Math.random() * emptySpaces.length)];\n        board[randomSpace.r][randomSpace.c] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n\nfunction updateBoard() {\n    var gameBoard = document.getElementById('game-board');\n    gameBoard.innerHTML = '';\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            var tile = document.createElement('div');\n            tile.textContent = board[r][c] === 0 ? '' : board[r][c];\n            tile.style.backgroundColor = getTileColor(board[r][c]);\n            gameBoard.appendChild(tile);\n        }\n    }\n}\n\nfunction getTileColor(value) {\n    if (value === 2) return '#eee4da';\n    if (value === 4) return '#ede0c8';\n    if (value === 8) return '#f2b179';\n    if (value === 16) return '#f59563';\n    if (value === 32) return '#f67c5f';\n    if (value === 64) return '#f65e3b';\n    if (value === 128) return '#edcf72';\n    if (value === 256) return '#edcc61';\n    if (value === 512) return '#edc850';\n    if (value === 1024) return '#edc53f';\n    if (value === 2048) return '#edc22e';\n    return '#cdc1b4';\n}\n\nfunction move(direction) {\n    var moved = false;\n    if (direction === 'up' || direction === 'down') {\n        for (var c = 0; c < 4; c++) {\n            var line = [];\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'down') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'down') mergedLine.reverse();\n            for (var r = 0; r < 4; r++) {\n                if (board[r][c] !== mergedLine[r]) moved = true;\n                board[r][c] = mergedLine[r];\n            }\n        }\n    } else if (direction === 'left' || direction === 'right') {\n        for (var r = 0; r < 4; r++) {\n            var line = [];\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== 0) line.push(board[r][c]);\n            }\n            if (direction === 'right') line.reverse();\n            var mergedLine = mergeLine(line);\n            if (direction === 'right') mergedLine.reverse();\n            for (var c = 0; c < 4; c++) {\n                if (board[r][c] !== mergedLine[c]) moved = true;\n                board[r][c] = mergedLine[c];\n            }\n        }\n    }\n    if (moved) {\n        spawnBlock();\n        updateBoard();\n        document.getElementById('score').textContent = 'Score: ' + score;\n        sendGameState();\n        if (isGameOver()) {\n            saveScore();\n        }\n    }\n}\n\nfunction mergeLine(line) {\n    var merged = [];\n    while (line.length > 0) {\n        if (line.length > 1 && line[0] === line[1]) {\n            var mergedValue = line[0] * 2;\n            score += mergedValue;\n            merged.push(mergedValue);\n            line.splice(0, 2);\n        } else {\n            merged.push(line[0]);\n            line.splice(0, 1);\n        }\n    }\n    while (merged.length < 4) {\n        merged.push(0);\n    }\n    return merged;\n}\n\nfunction isGameOver() {\n    for (var r = 0; r < 4; r++) {\n        for (var c = 0; c < 4; c++) {\n            if (board[r][c] === 0) return false;\n            if (r < 3 && board[r][c] === board[r + 1][c]) return false;\n            if (c < 3 && board[r][c] === board[r][c + 1]) return false;\n        }\n    }\n    return true;\n}\n\nfunction saveScore() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/save-score\",\n        data: JSON.stringify({ email: email, score: score }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Score saved successfully:\", response);\n            alert(\"Game Over! Your score: \" + score);\n            updateLeaderboard();\n        },\n        error: function(error) {\n            console.error(\"Error saving score:\", error);\n        }\n    });\n}\n\ndocument.addEventListener('keydown', function (event) {\n    if (event.key === 'ArrowUp' || event.key === 'w') move('up');\n    else if (event.key === 'ArrowDown' || event.key === 's') move('down');\n    else if (event.key === 'ArrowLeft' || event.key === 'a') move('left');\n    else if (event.key === 'ArrowRight' || event.key === 'd') move('right');\n});\n\ndocument.getElementById('restart-btn').addEventListener('click', initGame);\n\nfunction updateLeaderboard() {\n    var leaderboardList = document.getElementById('leaderboard-list');\n    leaderboardList.innerHTML = '';\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi/leaderboard\",\n        data: JSON.stringify({ email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            if (response.leaderboard && response.leaderboard.length > 0) {\n                response.leaderboard.forEach(function(entry) {\n                    var listItem = document.createElement('li');\n                    listItem.textContent = entry.email + ': ' + entry.score;\n                    leaderboardList.appendChild(listItem);\n                });\n            } else {\n                var listItem = document.createElement('li');\n                listItem.textContent = \"No leaderboard data available.\";\n                leaderboardList.appendChild(listItem);\n            }\n        },\n        error: function(error) {\n            console.error(\"Error fetching leaderboard:\", error);\n        }\n    });\n}\n\nfunction sendGameState() {\n    var email = document.getElementById('useremail').textContent;\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, score: score, email: email }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\nfunction receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}\n\ninitGame();","multiplayer":"function receiveGameState(message) {\n    board = message.board;\n    score = message.score;\n    updateBoard();\n    document.getElementById('score').textContent = 'Score: ' + score;\n    updateLeaderboard();\n}"}]