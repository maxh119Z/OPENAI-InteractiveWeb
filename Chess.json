[{"title":"Chess","html":"<div id=\"homepage\">\n    <div class=\"link\" data-url=\"/chess\">Go to Chess</div>\n    <div class=\"link\" data-url=\"/block-blast\">Go to Block Blast</div>\n    <div class=\"link\" data-url=\"/block%20blast\">Go to Block%20Blast</div>\n</div>\n<script type=\"module\">\n    document.querySelectorAll('.link').forEach(link => {\n        link.addEventListener('click', function() {\n            window.location.href = this.getAttribute('data-url');\n        });\n    });\n</script>","css":"body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background: linear-gradient(135deg, purple, orange);\n    margin: 0;\n}\n\n#homepage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.link {\n    margin: 10px 0;\n    padding: 15px 30px;\n    background-color: #f0f0f0;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.link:hover {\n    background-color: #ddd;\n}","javascript":"var board, game;\n\nfunction initChess() {\n    board = [\n        ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n        ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n        ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\n    ];\n    game = {\n        turn: 'white',\n        move: function(from, to) {\n            var piece = board[from[0]][from[1]];\n            board[to[0]][to[1]] = piece;\n            board[from[0]][from[1]] = ' ';\n            this.turn = this.turn === 'white' ? 'black' : 'white';\n            sendGameState();\n        }\n    };\n}\n\nfunction sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, turn: game.turn }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\ninitChess();","multiplayer":"function handleIncomingData(message) {\n    var data = JSON.parse(message);\n    board = data.board;\n    game.turn = data.turn;\n}\n\nhandleIncomingData(message);"},{"title":"Chess","html":"<div id=\"homepage\">\n    <div class=\"link\" data-url=\"/chess\">Go to Chess</div>\n    <div class=\"link\" data-url=\"/block-blast\">Go to Block Blast</div>\n    <div class=\"link\" data-url=\"/block%20blast\">Go to Block%20Blast</div>\n</div>\n<script type=\"module\">\n    document.querySelectorAll('.link').forEach(link => {\n        link.addEventListener('click', function() {\n            window.location.href = this.getAttribute('data-url');\n        });\n    });\n</script>","css":"body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background: linear-gradient(135deg, purple, orange);\n    margin: 0;\n}\n\n#homepage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: white;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    width: 300px;\n}\n\n.link {\n    margin: 10px 0;\n    padding: 15px 30px;\n    background-color: #f0f0f0;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    text-align: center;\n}\n\n.link:hover {\n    background-color: #ddd;\n}","javascript":"var board, game;\n\nfunction initChess() {\n    board = [\n        ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n        ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n        ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\n    ];\n    game = {\n        turn: 'white',\n        move: function(from, to) {\n            var piece = board[from[0]][from[1]];\n            board[to[0]][to[1]] = piece;\n            board[from[0]][from[1]] = ' ';\n            this.turn = this.turn === 'white' ? 'black' : 'white';\n            sendGameState();\n        }\n    };\n    displayBoard();\n}\n\nfunction displayBoard() {\n    var boardElement = document.createElement('div');\n    boardElement.style.display = 'grid';\n    boardElement.style.gridTemplateColumns = 'repeat(8, 50px)';\n    boardElement.style.gridTemplateRows = 'repeat(8, 50px)';\n    boardElement.style.gap = '1px';\n    boardElement.style.margin = '20px auto';\n    document.body.appendChild(boardElement);\n\n    for (var i = 0; i < 8; i++) {\n        for (var j = 0; j < 8; j++) {\n            var cell = document.createElement('div');\n            cell.style.width = '50px';\n            cell.style.height = '50px';\n            cell.style.display = 'flex';\n            cell.style.justifyContent = 'center';\n            cell.style.alignItems = 'center';\n            cell.style.backgroundColor = (i + j) % 2 === 0 ? '#eee' : '#333';\n            cell.style.color = (i + j) % 2 === 0 ? '#333' : '#eee';\n            cell.textContent = board[i][j] !== ' ' ? board[i][j] : '';\n            boardElement.appendChild(cell);\n        }\n    }\n}\n\nfunction sendGameState() {\n    $.ajax({\n        type: \"POST\",\n        url: \"/skibidi\",\n        data: JSON.stringify({ board: board, turn: game.turn }),\n        contentType: \"application/json\",\n        success: function(response) {\n            console.log(\"Game state sent successfully:\", response);\n        },\n        error: function(error) {\n            console.error(\"Error sending game state:\", error);\n        }\n    });\n}\n\ninitChess();","multiplayer":"function handleIncomingData(message) {\n    var data = JSON.parse(message);\n    board = data.board;\n    game.turn = data.turn;\n    displayBoard();\n}\n\nhandleIncomingData(message);"}]